// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator jsonSchema {
  provider = "prisma-json-schema-generator"
  output   = "."
}

// App

model app_user {
  id             Int             @id @default(autoincrement())
  name           String?         @db.VarChar(255)
  email          String?
  group_id       Int?
  created_at     DateTime?       @default(now())
  updated_at     DateTime?       @updatedAt
  deleted_at     DateTime?
  app_group      app_user_group? @relation(fields: [group_id], references: [id])
  cms_site_pages cms_site_page[]
  shop_carts     shop_cart[]
  shop_order     shop_order[]
}

model app_user_group {
  id          Int        @id @default(autoincrement())
  name        String?    @db.VarChar(255)
  permissions String?
  created_at  DateTime?  @default(now())
  updated_at  DateTime?  @updatedAt
  deleted_at  DateTime?
  app_users   app_user[]
}

// Cms

model cms_site {
  id         Int             @id @default(autoincrement())
  name       String?         @db.VarChar(255)
  address    String?
  created_at DateTime?       @default(now())
  updated_at DateTime?       @updatedAt
  deleted_at DateTime?
  cms_pages  cms_site_page[]
}

model cms_site_page {
  id         Int       @id @default(autoincrement())
  name       String?   @db.VarChar(255)
  slug       String?
  content    String?
  author_id  Int?
  site_id    Int?
  published  Boolean   @default(false)
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
  deleted_at DateTime?
  author     app_user? @relation(fields: [author_id], references: [id])
  cms_site   cms_site? @relation(fields: [site_id], references: [id])
}

// Shop

model shop_cart {
  id       Int       @id @default(autoincrement())
  name     String?   @db.VarChar(255)
  amount   Decimal?  @db.Decimal(10, 2)
  order_id Int?
  user_id  Int?
  user     app_user? @relation(fields: [user_id], references: [id])
}

model shop_category {
  id     Int      @id @default(autoincrement())
  name   String?  @db.VarChar(255)
  amount Decimal? @db.Decimal(10, 2)
}

model shop_order {
  id               Int               @id @default(autoincrement())
  name             String?           @db.VarChar(255)
  amount           Decimal?          @db.Decimal(10, 2)
  user_id          Int?
  app_user         app_user?         @relation(fields: [user_id], references: [id])
  shop_order_items shop_order_item[]
}

model shop_order_item {
  id         Int         @id @default(autoincrement())
  name       String?     @db.VarChar(255)
  amount     Decimal?    @db.Decimal(10, 2)
  order_id   Int?
  shop_order shop_order? @relation(fields: [order_id], references: [id])
}

model shop_product {
  id                    Int                     @id @default(autoincrement())
  name                  String?                 @db.VarChar(255)
  amount                Decimal?                @db.Decimal(10, 2)
  shop_product_category shop_product_category[]
}

model shop_product_category {
  id           Int           @id @default(autoincrement())
  name         String?       @db.VarChar(255)
  amount       Decimal?      @db.Decimal(10, 2)
  product_id   Int?
  shop_product shop_product? @relation(fields: [product_id], references: [id])
}

model shop_product_promo {
  id     Int     @id @default(autoincrement())
  name   String? @db.VarChar(255)
  filter String?
  rules  String?
}

// User

model uber_driver {
  id                    Int                     @id @default(autoincrement())
  name                  String?                 @db.VarChar(255)
  uber_passenger_rating uber_passenger_rating[]
}

model uber_driver_rating {
  id           Int             @id @default(autoincrement())
  name         String?         @db.VarChar(255)
  ride_id      Int?
  passenger_id Int?
  rating       Int?
  ride         uber_ride?      @relation(fields: [ride_id], references: [id])
  passenger    uber_passenger? @relation(fields: [passenger_id], references: [id])
}

model uber_passenger {
  id                 Int                  @id @default(autoincrement())
  name               String?              @db.VarChar(255)
  uber_driver_rating uber_driver_rating[]
}

model uber_passenger_rating {
  id        Int          @id @default(autoincrement())
  name      String?      @db.VarChar(255)
  ride_id   Int?
  driver_id Int?
  rating    Int?
  ride      uber_ride?   @relation(fields: [ride_id], references: [id])
  driver    uber_driver? @relation(fields: [driver_id], references: [id])
}

model uber_ride {
  id               Int                     @id @default(autoincrement())
  name             String?                 @db.VarChar(255)
  driver_id        Int?
  started_at       DateTime?
  finished_at      DateTime?
  amount           Decimal?                @db.Decimal(10, 2)
  passenger_rating uber_passenger_rating[]
  driver_rating    uber_driver_rating[]
  ride_log         uber_ride_log[]
  ride_passenger   uber_ride_passenger[]
  ride_points      uber_ride_points[]
}

model uber_ride_log {
  id         Int        @id @default(autoincrement())
  name       String?    @db.VarChar(255)
  ride_id    Int?
  created_at DateTime?
  ride       uber_ride? @relation(fields: [ride_id], references: [id])
}

model uber_ride_passenger {
  id      Int        @id @default(autoincrement())
  name    String?    @db.VarChar(255)
  ride_id Int?
  ride    uber_ride? @relation(fields: [ride_id], references: [id])
}

model uber_ride_points {
  id      Int        @id @default(autoincrement())
  name    String?    @db.VarChar(255)
  ride_id Int?
  lat     Decimal    @db.Decimal(10, 8)
  lng     Decimal    @db.Decimal(11, 8)
  ride    uber_ride? @relation(fields: [ride_id], references: [id])
}
